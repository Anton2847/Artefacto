// Generated by view binder compiler. Do not edit!
package com.example.artefacto001.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.artefacto001.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView appSubtitle;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final CardView cvChoice;

  @NonNull
  public final CardView cvHeader;

  @NonNull
  public final CardView cvRecentEvents;

  @NonNull
  public final CardView cvUnwatchedEvents;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final LinearLayout menuItems;

  @NonNull
  public final ImageView notificationIcon;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerEvents;

  @NonNull
  public final RecyclerView recyclerUnwatched;

  @NonNull
  public final LinearLayout templeArchives;

  @NonNull
  public final TextView textRecentEvents;

  @NonNull
  public final TextView textUnwatchedEvents;

  @NonNull
  public final TextView textWelcome;

  @NonNull
  public final LinearLayout ticketCounter;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView, @NonNull TextView appSubtitle,
      @NonNull TextView appTitle, @NonNull CardView cvChoice, @NonNull CardView cvHeader,
      @NonNull CardView cvRecentEvents, @NonNull CardView cvUnwatchedEvents,
      @NonNull LinearLayout headerLayout, @NonNull ImageView logo, @NonNull LinearLayout menuItems,
      @NonNull ImageView notificationIcon, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerEvents, @NonNull RecyclerView recyclerUnwatched,
      @NonNull LinearLayout templeArchives, @NonNull TextView textRecentEvents,
      @NonNull TextView textUnwatchedEvents, @NonNull TextView textWelcome,
      @NonNull LinearLayout ticketCounter) {
    this.rootView = rootView;
    this.appSubtitle = appSubtitle;
    this.appTitle = appTitle;
    this.cvChoice = cvChoice;
    this.cvHeader = cvHeader;
    this.cvRecentEvents = cvRecentEvents;
    this.cvUnwatchedEvents = cvUnwatchedEvents;
    this.headerLayout = headerLayout;
    this.logo = logo;
    this.menuItems = menuItems;
    this.notificationIcon = notificationIcon;
    this.progressBar = progressBar;
    this.recyclerEvents = recyclerEvents;
    this.recyclerUnwatched = recyclerUnwatched;
    this.templeArchives = templeArchives;
    this.textRecentEvents = textRecentEvents;
    this.textUnwatchedEvents = textUnwatchedEvents;
    this.textWelcome = textWelcome;
    this.ticketCounter = ticketCounter;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_subtitle;
      TextView appSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (appSubtitle == null) {
        break missingId;
      }

      id = R.id.app_title;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.cvChoice;
      CardView cvChoice = ViewBindings.findChildViewById(rootView, id);
      if (cvChoice == null) {
        break missingId;
      }

      id = R.id.cvHeader;
      CardView cvHeader = ViewBindings.findChildViewById(rootView, id);
      if (cvHeader == null) {
        break missingId;
      }

      id = R.id.cvRecentEvents;
      CardView cvRecentEvents = ViewBindings.findChildViewById(rootView, id);
      if (cvRecentEvents == null) {
        break missingId;
      }

      id = R.id.cvUnwatchedEvents;
      CardView cvUnwatchedEvents = ViewBindings.findChildViewById(rootView, id);
      if (cvUnwatchedEvents == null) {
        break missingId;
      }

      id = R.id.header_layout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.menu_items;
      LinearLayout menuItems = ViewBindings.findChildViewById(rootView, id);
      if (menuItems == null) {
        break missingId;
      }

      id = R.id.notification_icon;
      ImageView notificationIcon = ViewBindings.findChildViewById(rootView, id);
      if (notificationIcon == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycler_events;
      RecyclerView recyclerEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerEvents == null) {
        break missingId;
      }

      id = R.id.recycler_unwatched;
      RecyclerView recyclerUnwatched = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUnwatched == null) {
        break missingId;
      }

      id = R.id.temple_archives;
      LinearLayout templeArchives = ViewBindings.findChildViewById(rootView, id);
      if (templeArchives == null) {
        break missingId;
      }

      id = R.id.text_recent_events;
      TextView textRecentEvents = ViewBindings.findChildViewById(rootView, id);
      if (textRecentEvents == null) {
        break missingId;
      }

      id = R.id.text_unwatched_events;
      TextView textUnwatchedEvents = ViewBindings.findChildViewById(rootView, id);
      if (textUnwatchedEvents == null) {
        break missingId;
      }

      id = R.id.text_welcome;
      TextView textWelcome = ViewBindings.findChildViewById(rootView, id);
      if (textWelcome == null) {
        break missingId;
      }

      id = R.id.ticket_counter;
      LinearLayout ticketCounter = ViewBindings.findChildViewById(rootView, id);
      if (ticketCounter == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, appSubtitle, appTitle, cvChoice,
          cvHeader, cvRecentEvents, cvUnwatchedEvents, headerLayout, logo, menuItems,
          notificationIcon, progressBar, recyclerEvents, recyclerUnwatched, templeArchives,
          textRecentEvents, textUnwatchedEvents, textWelcome, ticketCounter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
